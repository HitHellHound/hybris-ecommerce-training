# -----------------------------------------------------------------------
# Copyright (c) 2019 SAP SE or an SAP affiliate company. All rights reserved.
# -----------------------------------------------------------------------
#
# Import the Solr configuration for the store
#
$productCatalog = __PRODUCT_CATALOG_NAME__
$catalogVersions = catalogVersions(catalog(id), version);
$serverConfigName =
$indexConfigName =
$searchConfigName =
$facetSearchConfigName =
$facetSearchConfigDescription =
$searchIndexNamePrefix =
$solrIndexedType =
$indexBaseSite =
$indexLanguages = ja, en, de, zh
$indexCurrencies = JPY, USD


#
# Setup the Solr server, indexer, and search configs
#

# Create the solr server configuration
INSERT_UPDATE SolrServerConfig; name[unique = true]; mode(code)

# Create the solr indexer configuration
INSERT_UPDATE SolrIndexConfig; name[unique = true]; batchSize; numberOfThreads; indexMode(code);

# Create the faceted search configuration
INSERT_UPDATE SolrSearchConfig; description[unique = true]; pageSize

#
# Setup the indexed types, their properties, and the update queries
#

# Declare the indexed type Product
INSERT_UPDATE SolrIndexedType; identifier[unique = true]; type(code); variant; sorts(&sortRefID)

INSERT_UPDATE SolrFacetSearchConfig; name[unique = true]; description; indexNamePrefix; languages(isocode); currencies(isocode); solrServerConfig(name); solrSearchConfig(description); solrIndexConfig(name); solrIndexedTypes(identifier); enabledLanguageFallbackMechanism; $catalogVersions

UPDATE BaseSite; uid[unique = true]; solrFacetSearchConfiguration(name)

# Define price range set
INSERT_UPDATE SolrValueRangeSet; name[unique = true]    ; qualifier; type; solrValueRanges(&rangeValueRefID)
                               ; numberOfQuestionsRange ; NoQ      ; int ; NoQRangeRef0, NoQRangeRef1, NoQRangeRef2, NoQRangeRef3, NoQRangeRef4, NoQRangeRef5

# Define price ranges
INSERT_UPDATE SolrValueRange; &rangeValueRefID; solrValueRangeSet(name)[unique = true]; name[unique = true]; from; to
                            ; NoQRangeRef0    ; numberOfQuestionsRange                ; 0                  ; 0   ; 0
                            ; NoQRangeRef1    ; numberOfQuestionsRange                ; 1                  ; 1   ; 1
                            ; NoQRangeRef2    ; numberOfQuestionsRange                ; 2                  ; 2   ; 2
                            ; NoQRangeRef3    ; numberOfQuestionsRange                ; 3                  ; 3   ; 3
                            ; NoQRangeRef4    ; numberOfQuestionsRange                ; 4                  ; 4   ; 4
                            ; NoQRangeRef5    ; numberOfQuestionsRange                ; more               ; 5   ; 1000

# Non-facet properties
INSERT_UPDATE SolrIndexedProperty; solrIndexedType(identifier)[unique = true]; name[unique = true]; type(code); sortableType(code); currency[default = false]; localized[default = false]; multiValue[default = false]; useForSpellchecking[default = false]; useForAutocomplete[default = false]; fieldValueProvider; valueProviderParameter

# Category fields
INSERT_UPDATE SolrIndexedProperty; solrIndexedType(identifier)[unique = true]; name[unique = true]; type(code); localized[default = false]; multiValue[default = true]; categoryField[default = true]; useForSpellchecking[default = false]; useForAutocomplete[default = false]; fieldValueProvider

# Category facets
INSERT_UPDATE SolrIndexedProperty; solrIndexedType(identifier)[unique = true]; name[unique = true]; type(code); multiValue[default = true]; facet[default = true]; facetType(code); facetSort(code); priority; visible; categoryField[default = true]; fieldValueProvider; facetDisplayNameProvider; topValuesProvider

# Other facet properties
INSERT_UPDATE SolrIndexedProperty; solrIndexedType(identifier)[unique = true]; name[unique = true]; type(code); sortableType(code); currency[default = false]; localized[default = false]; multiValue[default = false]; facet[default = true]; facetType(code); facetSort(code); priority; visible; useForSpellchecking[default = false]; useForAutocomplete[default = false]; fieldValueProvider               ; facetDisplayNameProvider; customFacetSortProvider; topValuesProvider        ; rangeSets(name)
                                 ; electronicsProductType                    ; numberOfQuestions  ; int       ;                   ;                          ;                           ;                            ;                      ; MultiSelectOr  ; Alpha          ; 4000    ; true   ;                                     ;                                    ; productNumberOfQuestionsProvider ;                         ;                        ; defaultTopValuesProvider ; numberOfQuestionsRange

# Create the queries that will be used to extract data for Solr
INSERT_UPDATE SolrIndexerQuery; solrIndexedType(identifier)[unique = true]; identifier[unique = true]; type(code); injectCurrentDate[default = true]; injectCurrentTime[default = true]; injectLastIndexTime[default = true]; query; user(uid)

# Define the available sorts
INSERT_UPDATE SolrSort; &sortRefID; indexedType(identifier)[unique = true]; code[unique = true]    ; useBoost
                      ; sortRef1  ; electronicsProductType                ; numberOfQuestions-asc  ; false
                      ; sortRef2  ; electronicsProductType                ; numberOfQuestions-desc ; false

# Define the sort fields
INSERT_UPDATE SolrSortField; sort(indexedType(identifier), code)[unique = true]; fieldName[unique = true]; ascending[unique = true]
                           ; electronicsProductType:numberOfQuestions-asc      ; numberOfQuestions       ; true
                           ; electronicsProductType:numberOfQuestions-desc     ; numberOfQuestions       ; false

INSERT_UPDATE SolrSearchQueryProperty; indexedProperty(name)[unique = true]; searchQueryTemplate(name)[unique = true]; priority; facet[default = true]; facetType(code)
                                     ; numberOfQuestions                   ; DEFAULT                                 ; 4088    ;                      ; MultiSelectOr
